#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,I_PBFILL)
  __DECLARE_VAR(BOOL,Q_FILLLIGHT)
  __DECLARE_VAR(BOOL,HMI_FILL)
  __DECLARE_VAR(BOOL,Q_LIGHTDISCHARGE)
  __DECLARE_VAR(BOOL,HMI_DIS)
  __DECLARE_VAR(BOOL,FILLING)
  __DECLARE_VAR(BOOL,DISCHARGING)
  __DECLARE_VAR(BOOL,AUTOMODE)
  __DECLARE_VAR(INT,Q_FILLVALVE)
  __DECLARE_VAR(INT,Q_DISCHARGEVALVE)
  __DECLARE_VAR(INT,Q_DISPLAY)
  __DECLARE_VAR(INT,LEVELRAW)
  __DECLARE_VAR(BOOL,I_PBDISCHARGE)
  __DECLARE_VAR(REAL,LEVELPCT)
  __DECLARE_VAR(TIME,TIMEFILLING)
  __DECLARE_VAR(INT,TIMEFILLINGINT)
  __DECLARE_VAR(TIME,TIMEDISCARGING)
  __DECLARE_VAR(INT,TIMEDISCARGINGINT)
  __DECLARE_VAR(BOOL,PBFILL_PREV)
  __DECLARE_VAR(BOOL,PBDIS_PREV)
  __DECLARE_VAR(BOOL,R_EDGE_FILL)
  __DECLARE_VAR(BOOL,R_EDGE_AUTO)
  __DECLARE_VAR(BOOL,F_EDGE_DIS)
  PID PID0;
  __DECLARE_VAR(BOOL,AUTOMODE_PREV)
  __DECLARE_VAR(REAL,SP)
  __DECLARE_VAR(REAL,PV)
  __DECLARE_VAR(INT,PV_LO)
  __DECLARE_VAR(INT,PV_HI)
  __DECLARE_VAR(INT,SP_LO)
  __DECLARE_VAR(INT,SP_HI)
  __DECLARE_VAR(REAL,U_MANUAL)
  __DECLARE_VAR(REAL,U_AUTO)
  __DECLARE_VAR(REAL,KP)
  __DECLARE_VAR(REAL,KI)
  __DECLARE_VAR(REAL,KD)
  __DECLARE_VAR(INT,KP_LO)
  __DECLARE_VAR(INT,KP_HI)
  __DECLARE_VAR(INT,KI_LO)
  __DECLARE_VAR(INT,KI_HI)
  __DECLARE_VAR(INT,KD_LO)
  __DECLARE_VAR(INT,KD_HI)
  __DECLARE_VAR(REAL,TMP)
  __DECLARE_VAR(REAL,INTTERM)
  __DECLARE_VAR(REAL,TS_S)
  __DECLARE_VAR(REAL,ERROR)
  __DECLARE_VAR(REAL,ERROR_PREV)
  __DECLARE_VAR(REAL,DERROR)
  __DECLARE_VAR(DINT,_RAW_DI)
  __DECLARE_VAR(WORD,_LOW)
  __DECLARE_VAR(WORD,_HIW)
  __DECLARE_VAR(DWORD,_LODW)
  __DECLARE_VAR(DWORD,_HIDW)
  __DECLARE_VAR(DWORD,_RAW_DW)

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
#endif //__POUS_H
